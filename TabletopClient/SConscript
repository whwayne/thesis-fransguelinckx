# Copyright 2011, Qualcomm Innovation Center, Inc.
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
# 
import os.path
Import('env')
 
sdk_methodsClient_sample = env.Java('$CLASSDIR' , 'src'  , 
                                    JAVACLASSPATH=env.GetBuildPath(env.subst('$JARDIR/alljoyn.jar')))

#if the manifest file does not yet exist create it unless clean has be specified.
if not env.GetOption('clean'):
    if not os.path.isfile('MANIFEST.MF'):
        manifest = ("Manifest-Version: 1.0\n" +
                    "Class-Path: alljoyn.jar\n" +
                    "Main-Class: org.alljoyn.bus.samples.Client\n")
        file = open('MANIFEST.MF', 'w')
        file.write(manifest)
        file.close()
    
sdk_methodsClient_sample.append('MANIFEST.MF')

env.Jar('$JARDIR/JavaSDKDocMethodsClient.jar', sdk_methodsClient_sample)
env.Requires(sdk_methodsClient_sample, '$JARDIR/alljoyn.jar')

#add the sample to the dist with out adding the build files.
env.Install('$JAVA_DISTDIR/samples/JavaSDKDoc/JavaSDKDocMethodsClient', ['src', '.classpath', '.project'])

#clean up the created manifest file
env.Clean('.', sdk_methodsClient_sample)
#clean the build folder that remains after cleaning all other files.
env.Clean('.', 'build')